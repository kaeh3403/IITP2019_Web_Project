/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.22
 * Generated at: 2019-07-14 14:59:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class insert_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE  >\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write(" \r\n");
      out.write("<script src=\"http://code.jquery.com/jquery-3.1.0.js\">\r\n");
      out.write("    \r\n");
      out.write("</script>\r\n");
      out.write(" \r\n");
      out.write("<script>\r\n");
      out.write("    $(document).ready(function() {\r\n");
      out.write(" \r\n");
      out.write("        $(\"#btnAdd\").click(function() { //버튼 클릭이벤트\r\n");
      out.write(" \r\n");
      out.write("            var title = $(\"#title\").val(); //태그입력값\r\n");
      out.write("            var author = $(\"#author\").val();\r\n");
      out.write("            var price = $(\"#price\").val();\r\n");
      out.write("            var qty = $(\"#qty\").val();\r\n");
      out.write(" \r\n");
      out.write("            if (title == \"\") { //빈값이면\r\n");
      out.write(" \r\n");
      out.write("                alert(\"도서명을 입력하세요\")\r\n");
      out.write("                $(\"#title\").focus(); //입력포커스 이동\r\n");
      out.write("                return; //함수 종료\r\n");
      out.write(" \r\n");
      out.write("            }\r\n");
      out.write(" \r\n");
      out.write("            if (author == \"\") {\r\n");
      out.write(" \r\n");
      out.write("                alert(\"저자명을 입력하세요\")\r\n");
      out.write("                $(\"#author\").focus();\r\n");
      out.write("                return;\r\n");
      out.write(" \r\n");
      out.write("            }\r\n");
      out.write(" \r\n");
      out.write("            if (price == 0) {\r\n");
      out.write(" \r\n");
      out.write("                alert(\"가격을 입력하세요\")\r\n");
      out.write("                $(\"#price\").focus();\r\n");
      out.write("                return;\r\n");
      out.write(" \r\n");
      out.write("            }\r\n");
      out.write(" \r\n");
      out.write("            if (qty == 0) {\r\n");
      out.write(" \r\n");
      out.write("                alert(\"수량을 입력하세요\")\r\n");
      out.write("                $(\"#qty\").focus();\r\n");
      out.write("                return;\r\n");
      out.write(" \r\n");
      out.write("            }\r\n");
      out.write(" \r\n");
      out.write("            /* 폼에 입력한 데이터를 서버로 전송 */\r\n");
      out.write("            document.form1.submit();\r\n");
      out.write("        });\r\n");
      out.write(" \r\n");
      out.write("    });\r\n");
      out.write("</script>\r\n");
      out.write(" \r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <!-- request.getContextPath() = 컨택스트 페스를 리턴함 -->\r\n");
      out.write("    a\r\n");
      out.write("    <!-- ction =\"/컨텍스트/가상디렉토리 / 서블릿 url\" -->\r\n");
      out.write("    <!-- id 는 jsp에서 쓸 것이고 name은 서블릿에서 사용할 것이다. -->\r\n");
      out.write("    <h2>도서 정보 등록</h2>\r\n");
      out.write(" \r\n");
      out.write("    <form name=\"form1\" method=\"post\"\r\n");
      out.write("        action=\"");
      out.print(request.getContextPath());
      out.write("/book_servlet/insert.do\">\r\n");
      out.write(" \r\n");
      out.write("        <table border=\"1\">\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td>도서명</td>\r\n");
      out.write("                <td><input name=\"title\" id=\"title\"></td>\r\n");
      out.write("            </tr>\r\n");
      out.write(" \r\n");
      out.write("            <tr>\r\n");
      out.write("                <td>저자</td>\r\n");
      out.write("                <td><input type=\"text\" name=\"author\" id=\"author\"></td>\r\n");
      out.write("            </tr>\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write("            <tr>\r\n");
      out.write("                <td>가격</td>\r\n");
      out.write("                <td><input type=\"number\" name=\"price\" id=\"price\" required></td>\r\n");
      out.write("            </tr>\r\n");
      out.write(" \r\n");
      out.write("            <tr>\r\n");
      out.write("                <td>수량</td>\r\n");
      out.write("                <td><input type=\"number\" name=\"qty\" id=\"qty\" required></td>\r\n");
      out.write("            </tr>\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write("            <tr>\r\n");
      out.write("                <td colspan=\"2\" align=\"center\"><input type=\"button\" id=\"btnAdd\"\r\n");
      out.write("                    value=\"확인\"> <input type=\"reset\" value=\"취소\"></td>\r\n");
      out.write("            </tr>\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write("        </table>\r\n");
      out.write(" \r\n");
      out.write("    </form>\r\n");
      out.write(" \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
